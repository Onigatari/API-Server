// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/approveOrder/": {
            "post": {
                "description": "Метод признания выручки: списывает из резерва деньги, добавляет данные в отчет для бухгалтерии",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Approve Order",
                "parameters": [
                    {
                        "description": "JSON с ID пользователя, ID услуги, ID заказа и суммой комиссии",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StatusServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StatusServiceRequest"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorMessage"
                        }
                    }
                }
            }
        },
        "/api/balance/{id}": {
            "get": {
                "description": "Метод начисления средств на баланс",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetBalanceResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorMessage"
                        }
                    }
                }
            }
        },
        "/api/deposit/": {
            "post": {
                "description": "Метод пополнение баланса",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Deposit",
                "parameters": [
                    {
                        "description": "JSON с ID пользователя и суммой денег для вноса",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBalanceRequest"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorMessage"
                        }
                    }
                }
            }
        },
        "/api/failedService/": {
            "post": {
                "description": "Метод признания выручки: списывает из резерва деньги, добавляет данные в отчет для бухгалтерии",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Failed Service",
                "parameters": [
                    {
                        "description": "JSON с ID пользователя, ID услуги, ID заказа и суммой комиссии",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StatusServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StatusServiceRequest"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorMessage"
                        }
                    }
                }
            }
        },
        "/api/reserveService/": {
            "post": {
                "description": "Метод перевода между пользователями",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Reserve Service",
                "parameters": [
                    {
                        "description": "JSON с ID пользователя, ID услуги, ID заказа и суммой комиссии",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReserveServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReserveServiceRequest"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorMessage"
                        }
                    }
                }
            }
        },
        "/api/transfer/": {
            "post": {
                "description": "Метод перевода между пользователями",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Transfer",
                "parameters": [
                    {
                        "description": "JSON с ID отправителя, ID получателя и суммой денег",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TransferRequest"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorMessage"
                        }
                    }
                }
            }
        },
        "/api/withdrawal/": {
            "post": {
                "description": "Метод снятие средств со счета",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Withdrawal",
                "parameters": [
                    {
                        "description": "JSON с ID пользователя и суммой денег для вывода",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBalanceRequest"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorMessage"
                        }
                    }
                }
            }
        },
        "/ping/": {
            "get": {
                "description": "Ping-Pong!",
                "produces": [
                    "application/json"
                ],
                "summary": "Ping",
                "responses": {}
            }
        }
    },
    "definitions": {
        "handler.errorMessage": {
            "type": "object",
            "properties": {
                "error-message": {
                    "type": "string"
                }
            }
        },
        "models.GetBalanceResponse": {
            "type": "object",
            "properties": {
                "user-balance": {
                    "type": "integer"
                },
                "user-pending-amount": {
                    "type": "integer"
                }
            }
        },
        "models.ReserveServiceRequest": {
            "type": "object",
            "properties": {
                "order-id": {
                    "type": "integer"
                },
                "payment": {
                    "type": "integer"
                },
                "service-id": {
                    "type": "integer"
                },
                "user-id": {
                    "type": "integer"
                }
            }
        },
        "models.StatusServiceRequest": {
            "type": "object",
            "properties": {
                "order-id": {
                    "type": "integer"
                },
                "payment": {
                    "type": "integer"
                },
                "service-id": {
                    "type": "integer"
                },
                "user-id": {
                    "type": "integer"
                }
            }
        },
        "models.TransferRequest": {
            "type": "object",
            "required": [
                "receiver-id",
                "sender-id",
                "transfer-amount"
            ],
            "properties": {
                "receiver-id": {
                    "type": "integer"
                },
                "sender-id": {
                    "type": "integer"
                },
                "transfer-amount": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateBalanceRequest": {
            "type": "object",
            "required": [
                "update-amount",
                "user-id"
            ],
            "properties": {
                "update-amount": {
                    "type": "integer"
                },
                "user-id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "API-Server AvitoTech",
	Description:      "Microservice for working with user balance",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
